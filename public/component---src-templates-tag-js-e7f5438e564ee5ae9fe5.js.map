{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SiteHeader.js","webpack:///./src/components/layout.js","webpack:///./src/components/CategoryList.js","webpack:///./src/components/TagList.js","webpack:///./src/components/PostMeta.js","webpack:///./src/components/PostListing.js"],"names":["TagTemplate","render","_this$props","this","props","pageContext","data","tag","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","metadata","site","siteMetadata","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","_components_PostListing__WEBPACK_IMPORTED_MODULE_4__","posts","allMarkdownRemark","edges","Component","pageQuery","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","Consumer","staticQueryData","query","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","typography__WEBPACK_IMPORTED_MODULE_0___default","rhythm","scale","ProdPageRenderer","_ref","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","__webpack_exports__","u","244","e","t","n","r","o","i","l","c","SiteHeader","headerStyle","react_default","style","gatsby_browser_entry","Link","textDecoration","color","to","layout_Template","Object","b","marginBottom","marginTop","fontFamily","marginLeft","marginRight","maxWidth","padding","s","245","CategoryList","category","lodash","kebabCase","TagList","tags","length","listStyle","display","map","key","PostMeta_BulletMark","date","Fragment","_ref2","node","lodash__WEBPACK_IMPORTED_MODULE_4__","get","fields","slug","_utils_typography_js__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_2__","_PostMeta__WEBPACK_IMPORTED_MODULE_5__","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"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","file":"component---src-templates-tag-js-e7f5438e564ee5ae9fe5.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport PostListing from '../components/PostListing'\n\nexport default class TagTemplate extends React.Component {\n  render() {\n    const { pageContext, data } = this.props\n    const { tag } = pageContext\n    return (\n      <Layout\n        location={this.props.location}\n        metadata={this.props.data.site.siteMetadata}\n      >\n        <div className=\"tag-container\">\n          <Helmet title={`Posts tagged \"${tag}\"`} />\n          <h2>Posts tagged with {tag}</h2>\n          <PostListing posts={data.allMarkdownRemark.edges} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => ({\n  'a.gatsby-resp-image-link': {\n    boxShadow: 'none',\n  },\n})\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport default ({ headerStyle, title }) => (\n  <h1 style={headerStyle}>\n    <Link\n      style={{\n        boxShadow: 'none',\n        textDecoration: 'none',\n        color: 'inherit',\n      }}\n      to={'/'}\n    >\n      {title}\n    </Link>\n  </h1>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { rhythm, scale } from '../utils/typography'\nimport SiteHeader from './SiteHeader'\n\nclass Template extends React.Component {\n  render() {\n    const { location, metadata, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let headerStyle\n    if (location.pathname === rootPath) {\n      headerStyle = {\n        ...scale(1.5),\n        marginBottom: rhythm(1.5),\n        marginTop: 0,\n      }\n    } else {\n      headerStyle = {\n        fontFamily: 'Montserrat, sans-serif',\n        marginTop: 0,\n        marginBottom: rhythm(-1),\n      }\n    }\n    return (\n      <div\n        style={{\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          maxWidth: rhythm(32),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <SiteHeader headerStyle={headerStyle} title={metadata.title} />\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Template\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { kebabCase } from 'lodash'\n\nexport default ({ category }) => {\n  return (\n    <span>\n      Category: <Link to={`/category/${kebabCase(category)}/`}>{category}</Link>\n    </span>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { kebabCase } from 'lodash'\n\nexport default ({ tags }) => {\n  if (tags.length < 1) {\n    return null\n  }\n\n  return (\n    <span>\n      Tags:{' '}\n      <ul style={{ listStyle: `none`, display: `inline` }}>\n        {tags.map((tag, i) => (\n          <li\n            key={`${kebabCase(tag)}-${i}`}\n            style={{ display: `inline-block`, marginLeft: 3 }}\n          >\n            <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n            {i < tags.length - 1 ? ', ' : ''}\n          </li>\n        ))}\n      </ul>\n    </span>\n  )\n}\n","import React from 'react'\nimport CategoryList from './CategoryList'\nimport TagList from './TagList'\n\nconst BulletMark = () => <span> &bull; </span>\n\nexport default ({ date, category, tags }) => (\n  <div>\n    <small>\n      {date ? <span>{date}</span> : null}\n      {date && (category || tags.length > 0) ? <BulletMark /> : null}\n      <CategoryList category={category} />\n      {(date || category) && tags.length > 0 ? <BulletMark /> : null}\n      <TagList tags={tags} />\n    </small>\n  </div>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { rhythm } from '../utils/typography.js'\nimport { get } from 'lodash'\nimport PostMeta from './PostMeta'\n\nexport default ({ posts }) => (\n  <React.Fragment>\n    {posts.map(({ node }) => {\n      const title = get(node, 'frontmatter.title') || node.fields.slug\n      const date = get(node, 'frontmatter.date') || ''\n      const category = get(node, 'frontmatter.category') || []\n      const tags = get(node, 'frontmatter.tags') || []\n      return (\n        <div key={node.fields.slug}>\n          <h3\n            style={{\n              marginBottom: rhythm(1 / 4),\n            }}\n          >\n            <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n              {title}\n            </Link>\n          </h3>\n          <PostMeta date={date} category={category} tags={tags} />\n          <div dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n        </div>\n      )\n    })}\n  </React.Fragment>\n)\n"],"sourceRoot":""}