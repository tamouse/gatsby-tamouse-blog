{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","default","_ref","_ref$data","data","group","allMarkdownRemark","title","site","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","map","tag","key","fieldValue","gatsby_link__WEBPACK_IMPORTED_MODULE_4___default","to","Object","lodash__WEBPACK_IMPORTED_MODULE_2__","kebabCase","totalCount","pageQuery","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","props","Consumer","staticQueryData","query","render","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","l"],"mappings":"kNA0BAA,EAAAC,QApBiB,SAAAC,GAAA,IAAAC,EAAAD,EACfE,KAA6BC,EADdF,EACPG,kBAAqBD,MAAiCE,EAD/CJ,EACuBK,KAAQC,aAAgBF,MAD/C,OAGfG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAAF,GAAOJ,MAAOA,IACfG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UACGP,EAAMS,IAAI,SAAAC,GAAA,OACTL,EAAAC,EAAAC,cAAA,MAAII,IAAKD,EAAIE,YACXP,EAAAC,EAAAC,cAACM,EAAAP,GAAKQ,GAAA,SAAaC,OAAAC,EAAAC,UAAAF,CAAUL,EAAIE,YAA3B,KACHF,EAAIE,WADP,KACqBF,EAAIQ,WADzB,YAYL,IAAMC,4nBChBb,IAAMC,EAAqBC,EAAAf,EAAMgB,kBAE3BC,EAAc,SAAAC,GAAA,OAClBH,EAAAf,EAAAC,cAACa,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEF,EAAMzB,MACL2B,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAO5B,MAEtDyB,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMzB,KAAOyB,EAAMzB,KAAKA,KAAO2B,EAAgBF,EAAMG,OAAO5B,MAGvDsB,EAAAf,EAAAC,cAAA,uCAaf,SAASuB,IACP,MAAM,IAAIC,MACR,gVATJR,EAAYS,WACVjC,KAAMkC,EAAA3B,EAAU4B,OAChBP,MAAOM,EAAA3B,EAAU6B,OAAOC,WACxBR,OAAQK,EAAA3B,EAAU+B,KAClBR,SAAUI,EAAA3B,EAAU+B,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAA,OALAH,EAAE1C,SAAY0C,+FCMzCI,EAAmB,SAAA7C,GAAkB,IAAf8C,EAAe9C,EAAf8C,SACpBC,EAAgBC,EAAAvC,EAAOwC,wBAAwBH,EAASI,UAC9D,OAAO1B,EAAAf,EAAMC,cAAcyC,EAAA1C,GACzBqC,WACAC,mBAIJF,EAAiBV,WACfW,SAAUV,EAAA3B,EAAU2C,OAClBF,SAAUd,EAAA3B,EAAU6B,OAAOC,aAC1BA,YAGLzC,EAAAC,QAAAsD","file":"component---src-pages-tags-js-de515fd5ce896dab0d81.js","sourcesContent":["import React from 'react'\nimport { kebabCase } from 'lodash'\nimport Helmet from 'react-helmet'\nimport Link from 'gatsby-link'\nimport { graphql } from 'gatsby'\n\nconst TagsPage = ({\n  data: { allMarkdownRemark: { group }, site: { siteMetadata: { title } } },\n}) => (\n  <div>\n    <Helmet title={title} />\n    <div>\n      <h1>Tags</h1>\n      <ul>\n        {group.map(tag => (\n          <li key={tag.fieldValue}>\n            <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n              {tag.fieldValue} ({tag.totalCount})\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n)\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query TagsQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      filter: { frontmatter: { published: { ne: false } } }\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}