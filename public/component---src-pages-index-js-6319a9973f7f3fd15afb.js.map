{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SiteHeader.js","webpack:///./src/components/layout.js","webpack:///./src/components/CategoryList.js","webpack:///./src/components/TagList.js","webpack:///./src/components/PostMeta.js","webpack:///./src/components/PostListing.js","webpack:///./src/components/Bio.js","webpack:///./data/SiteConfig.js"],"names":["BlogIndex","render","siteMetadata","lodash_get__WEBPACK_IMPORTED_MODULE_3___default","this","props","siteTitle","siteDescription","posts","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","metadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","lang","meta","name","content","title","_components_Bio__WEBPACK_IMPORTED_MODULE_5__","_components_PostListing__WEBPACK_IMPORTED_MODULE_7__","Component","pageQuery","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","Consumer","staticQueryData","data","query","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","typography__WEBPACK_IMPORTED_MODULE_0___default","rhythm","scale","ProdPageRenderer","_ref","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","__webpack_exports__","u","244","e","t","n","r","i","o","l","s","SiteHeader","headerStyle","react_default","style","gatsby_browser_entry","Link","textDecoration","color","to","layout_Template","_this$props","Object","b","marginBottom","marginTop","fontFamily","marginLeft","marginRight","maxWidth","padding","c","245","CategoryList","category","lodash","kebabCase","TagList","tags","length","listStyle","display","map","tag","key","PostMeta_BulletMark","date","Fragment","_ref2","node","lodash__WEBPACK_IMPORTED_MODULE_4__","get","fields","slug","_utils_typography_js__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_2__","_PostMeta__WEBPACK_IMPORTED_MODULE_5__","dangerouslySetInnerHTML","__html","excerpt","Bio","_utils_typography__WEBPACK_IMPORTED_MODULE_6__","src","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_3___default","userAvatar","alt","userName","width","height","userLocation","userPronouns","href","urljoin__WEBPACK_IMPORTED_MODULE_2___default","userTwitter","target","d","263","siteTitleShort","siteTitleAlt","siteUrl","pathPrefix"],"mappings":"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","file":"component---src-pages-index-js-6319a9973f7f3fd15afb.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/layout'\nimport PostListing from '../components/PostListing'\nimport PostMeta from '../components/PostMeta'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteMetadata = get(this.props, 'data.site.siteMetadata')\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location} metadata={siteMetadata}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n        <Bio />\n        <PostListing posts={posts} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            category\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => ({\n  'a.gatsby-resp-image-link': {\n    boxShadow: 'none',\n  },\n})\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport default ({ headerStyle, title }) => (\n  <h1 style={headerStyle}>\n    <Link\n      style={{\n        boxShadow: 'none',\n        textDecoration: 'none',\n        color: 'inherit',\n      }}\n      to={'/'}\n    >\n      {title}\n    </Link>\n  </h1>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { rhythm, scale } from '../utils/typography'\nimport SiteHeader from './SiteHeader'\n\nclass Template extends React.Component {\n  render() {\n    const { location, metadata, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let headerStyle\n    if (location.pathname === rootPath) {\n      headerStyle = {\n        ...scale(1.5),\n        marginBottom: rhythm(1.5),\n        marginTop: 0,\n      }\n    } else {\n      headerStyle = {\n        fontFamily: 'Montserrat, sans-serif',\n        marginTop: 0,\n        marginBottom: rhythm(-1),\n      }\n    }\n    return (\n      <div\n        style={{\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          maxWidth: rhythm(32),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <SiteHeader headerStyle={headerStyle} title={metadata.title} />\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Template\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { kebabCase } from 'lodash'\n\nexport default ({ category }) => {\n  return (\n    <span>\n      Category: <Link to={`/category/${kebabCase(category)}/`}>{category}</Link>\n    </span>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { kebabCase } from 'lodash'\n\nexport default ({ tags }) => {\n  if (tags.length < 1) {\n    return null\n  }\n\n  return (\n    <span>\n      Tags:{' '}\n      <ul style={{ listStyle: `none`, display: `inline` }}>\n        {tags.map((tag, i) => (\n          <li\n            key={`${kebabCase(tag)}-${i}`}\n            style={{ display: `inline-block`, marginLeft: 3 }}\n          >\n            <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n            {i < tags.length - 1 ? ', ' : ''}\n          </li>\n        ))}\n      </ul>\n    </span>\n  )\n}\n","import React from 'react'\nimport CategoryList from './CategoryList'\nimport TagList from './TagList'\n\nconst BulletMark = () => <span> &bull; </span>\n\nexport default ({ date, category, tags }) => (\n  <div>\n    <small>\n      {date ? <span>{date}</span> : null}\n      {date && (category || tags.length > 0) ? <BulletMark /> : null}\n      <CategoryList category={category} />\n      {(date || category) && tags.length > 0 ? <BulletMark /> : null}\n      <TagList tags={tags} />\n    </small>\n  </div>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { rhythm } from '../utils/typography.js'\nimport { get } from 'lodash'\nimport PostMeta from './PostMeta'\n\nexport default ({ posts }) => (\n  <React.Fragment>\n    {posts.map(({ node }) => {\n      const title = get(node, 'frontmatter.title') || node.fields.slug\n      const date = get(node, 'frontmatter.date') || ''\n      const category = get(node, 'frontmatter.category') || []\n      const tags = get(node, 'frontmatter.tags') || []\n      return (\n        <div key={node.fields.slug}>\n          <h3\n            style={{\n              marginBottom: rhythm(1 / 4),\n            }}\n          >\n            <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n              {title}\n            </Link>\n          </h3>\n          <PostMeta date={date} category={category} tags={tags} />\n          <div dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n        </div>\n      )\n    })}\n  </React.Fragment>\n)\n","import React from 'react'\nimport urljoin from 'urljoin'\nimport config from '../../data/SiteConfig'\n\n// Import typefaces\nimport 'typeface-montserrat'\nimport 'typeface-merriweather'\n\nimport { rhythm } from '../utils/typography'\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2.5),\n        }}\n      >\n        <img\n          src={config.userAvatar}\n          alt={config.userName}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n          }}\n        />\n        <p>\n          {config.userName} lives in {config.userLocation}. You should follow{' '}\n          {config.userPronouns[1]} on Twitter at{' '}\n          <a\n            href={urljoin('https://twitter.com/', config.userTwitter)}\n            target=\"_blank\"\n          >\n            {config.userTwitter}\n          </a>.\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Bio\n","module.exports = {\n  siteTitle: 'Tamouse Blog',\n  siteTitleShort: 'tamouse-blog',\n  siteTitleAlt: 'Tamouse Blog',\n  siteUrl: 'https://tamouse.github.io',\n  pathPrefix: '/gatsby-tamouse-blog',\n  siteDescription: 'the rumblings and ramblings of a well-traveled techmouse',\n  userName: 'Tamara Temple',\n  userTwitter: 'tamouse',\n  userLocation: 'Twin Cities, Minnesota, USA',\n  userAvatar:\n    'https://secure.gravatar.com/avatar/899efa3678918b168a8c7f0ef3817c34',\n  userPronouns: ['she', 'her', 'hers'],\n}\n"],"sourceRoot":""}